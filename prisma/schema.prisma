// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String?  @unique
  phone     String?  @unique
  password  String
  role      String // 'admin', 'vendor', 'influencer', 'customer'
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  influencerProducts InfluencerProduct[]
  withdrawals        Withdrawal[]
  promotionLinks     PromotionLink[]
  orders             Order[]
}

model Product {
  id        Int      @id @default(autoincrement())
  cafe24Id  Int      @unique // Cafe24 product_no
  mallId    String // 어떤 쇼핑몰의 상품인지
  name      String
  price     Int
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  influencerProducts InfluencerProduct[]
  orderItems         OrderItem[]
  promotionLinks     PromotionLink[]
}

model InfluencerProduct {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  product     Product  @relation(fields: [productId], references: [id])
  productId   Int
  title       String
  description String
  imageUrl    String
  price       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model PromotionLink {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  code      String   @unique
  createdAt DateTime @default(now())
}

model Withdrawal {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  amount    Int
  status    String   @default("pending")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  totalAmount Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orderItems OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Int
}
